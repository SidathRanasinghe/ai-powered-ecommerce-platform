version: "3.8"

services:
  mongodb:
    image: mongo:6.0
    container_name: ecommerce-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecommerce-network

  redis:
    image: redis:7-alpine
    container_name: ecommerce-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecommerce-network

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.dev
    container_name: ecommerce-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/ecommerce?authSource=admin
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../../backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - ecommerce-network

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.dev
    container_name: ecommerce-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - ecommerce-network

  ml-service:
    build:
      context: ../../ml-service
      dockerfile: Dockerfile.dev
    container_name: ecommerce-ml
    restart: unless-stopped
    ports:
      - "8001:8001"
    volumes:
      - ../../ml-service:/app
    networks:
      - ecommerce-network

volumes:
  mongodb_data:
  redis_data:

networks:
  ecommerce-network:
    driver: bridge
